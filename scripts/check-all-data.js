const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkAllData() {
  try {
    // √úlke sayƒ±larƒ±
    const countryCount = await prisma.country.count();
    console.log(`üìä Toplam √ºlke sayƒ±sƒ±: ${countryCount}`);
    
    // ≈ûehir sayƒ±larƒ±
    const cityCount = await prisma.city.count();
    console.log(`üèôÔ∏è Toplam ≈üehir sayƒ±sƒ±: ${cityCount}`);
    
    // ƒ∞l√ße sayƒ±larƒ±
    const districtCount = await prisma.district.count();
    console.log(`üèòÔ∏è Toplam il√ße sayƒ±sƒ±: ${districtCount}`);
    
    // Kasaba sayƒ±larƒ±
    const townCount = await prisma.town.count();
    console.log(`üè† Toplam kasaba sayƒ±sƒ±: ${townCount}`);
    
    console.log(`üìç TOPLAM LOKASYON: ${countryCount + cityCount + districtCount + townCount}`);
    
    // En b√ºy√ºk ≈üehirler
    console.log('\nüèôÔ∏è En b√ºy√ºk 10 ≈üehir:');
    const biggestCities = await prisma.city.findMany({
      take: 10,
      orderBy: { population: 'desc' },
      include: { country: true }
    });
    
    biggestCities.forEach((city, index) => {
      console.log(`${index + 1}. ${city.name}, ${city.country.name} - ${city.population.toLocaleString()} ki≈üi`);
    });
    
    // √úlkelere g√∂re ≈üehir daƒüƒ±lƒ±mƒ±
    console.log('\nüåç √úlkelere g√∂re ≈üehir sayƒ±larƒ± (ƒ∞lk 10):');
    const cityByCountry = await prisma.city.groupBy({
      by: ['country_id'],
      _count: { country_id: true },
      orderBy: { _count: { country_id: 'desc' } },
      take: 10
    });
    
    for (const item of cityByCountry) {
      const country = await prisma.country.findUnique({
        where: { id: item.country_id }
      });
      console.log(`${country.name}: ${item._count.country_id} ≈üehir`);
    }
    
    // Kƒ±talara g√∂re daƒüƒ±lƒ±m
    console.log('\nüåé Kƒ±talara g√∂re √ºlke daƒüƒ±lƒ±mƒ±:');
    const continents = await prisma.country.groupBy({
      by: ['continent'],
      _count: { continent: true },
      orderBy: { _count: { continent: 'desc' } }
    });
    
    continents.forEach(continent => {
      console.log(`${continent.continent}: ${continent._count.continent} √ºlke`);
    });
    
  } catch (error) {
    console.error('‚ùå Hata:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkAllData(); 